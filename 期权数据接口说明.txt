
一、任务描述：使用akshare获取中国金融期货交易所‘中证1000’、‘沪深300’、‘上证50’三个股指期货产品的期权数据。

二、开发应用环境：
1、macOS 15.4 ，M2芯片
2、python语言，版本3.13.2，使用虚拟环境运行代码，名称是：myvenv，环境已经配置完毕。

三、数据库：采用sqlite，数据库名称是‘data_vix.db’，存放地址：‘Users/sj/vix’。内有3个期货数据表，其中一个是：‘fu_cffex’，字段是：“合约、交易日、开盘价、收盘价、结算价、最高价、成交量、持仓量”，主键是‘合约’和‘交易日’。3个期权数据表：‘op_mo’、‘op_io’、‘op_ho’，期权数据表的字段是：“期权合约代码、交易日期、开盘价、收盘价、最高价、最低价、成交量、期权类型、行权价、期权合约”，主键是‘期权合约代码’和‘交易日期’。

四、数据源和数据接口说明
使用akshare库中新浪财经提供的中金所数据源，实现期权数据的获取和存储。
1、期权合约代码获取，通过接口函数‘option_cffex_gzmc_spot_sina’接口函数获取。其中gzmc是股指名称的意思，具体有zz1000、hs300、sz50，对应的是中证1000、沪深300、上证50，三个股指期货。
接口函数代码：‘option_cffex_zz1000_spot_sina’、‘option_cffex_hs300_spot_sina’、‘option_cffex_sz50_spot_sina’，该函数返回数据和类型为：“
名称	类型	描述
看涨合约-买量	int64	
看涨合约-买价	float64	
看涨合约-最新价	float64	
看涨合约-卖价	float	
看涨合约-卖量	int64	
看涨合约-持仓量	int64	
看涨合约-涨跌	float64	
行权价	int64	
看涨合约-标识	object
看跌合约-买量	int64	
看跌合约-买价	float64	
看跌合约-最新价	float64	
看跌合约-卖价	float64	
看跌合约-卖量	int64	
看跌合约-持仓量	int64	
看跌合约-涨跌	float64	
看跌合约-标识	object	
”。
示例代码‘ak.option_cffex_zz1000_spot_sina(symbol="mo2504")’返回数据：“
    看涨合约-买量  看涨合约-买价  看涨合约-最新价  看涨合约-卖价  看涨合约-卖量  看涨合约-持仓量  看涨合约-涨跌   行权价      看涨合约-标识  看跌合约-买量  看跌合约-买价  看跌合约-最新价  看跌合约-卖价  看跌合约-卖量  看跌合约-持仓量  看跌合约-涨跌      看跌合约-标识
0         1   1012.8    1043.0   1025.0        1        77    -3.69  5200  mo2504C5200      113      1.0       1.2      1.2       11      1386     0.00  mo2504P5200
1         1    914.8     941.8    925.4        1        38    -4.23  5300  mo2504C5300       10      1.0       1.0      1.2        3       686   -16.67  mo2504P5300
2         1    815.2     843.6    826.2        1        88    -4.59  5400  mo2504C5400       20      1.2       1.6      1.6        5       940    14.29  mo2504P5400
3         1    715.4     721.8    727.6        1        94    -8.10  5500  mo2504C5500        6      2.0       2.0      2.2        8      2111    -9.09  mo2504P5500
4         1    617.4     645.6    629.8        1        95    -5.56  5600  mo2504C5600        8      3.6       3.8      3.8        5      2694     5.56  mo2504P5600
5         1    521.6     553.4    527.2        1       115    -5.56  5700  mo2504C5700        5      7.2       7.4      7.4        4      3243     5.71  mo2504P5700
6         1    434.4     436.4    434.8        1       270   -11.26  5800  mo2504C5800        2     14.4      14.4     14.6        3      4251    14.29  mo2504P5800
7         1    346.8     349.2    347.6        1       557   -12.70  5900  mo2504C5900       90     26.6      26.8     26.8        1      4009    20.72  mo2504P5900
8         1    265.6     267.8    268.0        1       829   -16.16  6000  mo2504C6000       21     47.4      47.6     47.6        1      5798    21.43  mo2504P6000
9         1    198.0     198.4    199.0        2      1274   -17.06  6100  mo2504C6100        2     77.8      78.0     78.0        2      3592    23.03  mo2504P6100
10        1    142.0     142.0    142.2        1      3042   -19.77  6200  mo2504C6200        5    118.8     118.8    119.0        1      4892    21.47  mo2504P6200
11        2     97.6      98.0     98.0       64      5452   -20.33  6300  mo2504C6300        8    173.4     173.6    175.0        1      4229    20.06  mo2504P6300
12        1     64.6      64.6     64.8        9      7957   -21.03  6400  mo2504C6400        3    241.6     241.8    242.0        1      4275    20.18  mo2504P6400
13        4     41.2      41.8     41.8        4      7418   -20.53  6500  mo2504C6500        2    317.4     318.0    320.4        1      3387    16.83  mo2504P6500
14        1     25.4      25.6     25.6        1     10735   -22.89  6600  mo2504C6600        1    403.2     401.8    405.6        1      1897    15.79  mo2504P6600
15        8     15.6      15.8     15.8       17      5619   -21.00  6700  mo2504C6700        1    493.8     492.0    494.6        1       466    11.36  mo2504P6700
16       15      9.6       9.8      9.8        2      6215   -20.97  6800  mo2504C6800        1    581.2     577.6    595.2        1       189     8.73  mo2504P6800
17        8      5.4       5.6      5.6       32      4130   -20.00  6900  mo2504C6900        1    677.4     656.4    691.2        1       153     4.79  mo2504P6900
18        8      4.0       4.2      4.2        5      5235    -4.55  7000  mo2504C7000        1    775.2     759.8    786.8        1        68     5.03  mo2504P7000
19        2      2.4       2.4      2.6       11      3471    -7.69  7100  mo2504C7100        1    873.8     860.4    886.0        1        37     4.77  mo2504P7100
20        2      2.0       2.2      2.2        2      3290    -8.33  7200  mo2504C7200        1    972.8     964.6    984.6        1        67     5.17  mo2504P7200
21       10      1.8       1.8      2.0       35      3331   -10.00  7300  mo2504C7300        1   1062.8    1071.6   1095.0        1        53     5.43  mo2504P7300
”。其中‘看涨合约-标识’和‘看跌合约-标识’的返回值存入数据库的三个数据表的“期权合约代码”字段内。这个函数的参数symbol通过配置文件config.json的"cffex_op_name": []获得。配置文件的地址是:~/vix/config.json 。
2、期权表‘开盘价’、‘收盘价’、‘结算价’、‘最高价’、‘最低价’、‘成交量’数据通过‘option_cffex_zz1000_daily_sina’、‘option_cffex_hs300_daily_sina’、‘option_cffex_sz50_daily_sina’三个接口函数获取，参数symbol是‘期权合约代码’，返回数据类型：“
名称	类型	描述
date	object	-
open	float64	-
high	float64	-
low	float64	-
close	float64	-
volume	int64	-
”，示例代码‘option_cffex_zz1000_daily_sina_df = ak.option_cffex_zz1000_daily_sina(symbol="mo2504C6400")’，返回数据：“
          date   open   high    low  close  volume
0   2025-01-20  134.0  143.8  115.4  115.4      13
1   2025-01-21  120.2  123.0  109.0  121.0      24
2   2025-01-22  113.4  118.4  110.8  114.4      74
3   2025-01-23  138.2  151.2  107.0  107.0      34
4   2025-01-24  112.2  130.2  112.2  130.2      18
5   2025-01-27  139.2  139.2  100.2  100.4       8
6   2025-02-05  104.4  106.0   76.0   79.2      75
7   2025-02-06   76.4  110.0   76.4  103.0      39
8   2025-02-07  117.8  164.4  117.8  131.8      62
9   2025-02-10  142.6  157.4  141.0  157.4      60
10  2025-02-11  138.8  151.8  136.0  144.8      19
11  2025-02-12  150.8  159.0  140.0  158.2      48
12  2025-02-13  148.0  157.4  140.4  140.6      31
13  2025-02-14  145.8  149.4  127.2  143.6      38
14  2025-02-17  155.8  167.6  132.6  143.6      46
15  2025-02-18  132.2  133.0   98.0  104.0      40
16  2025-02-19  104.4  146.6  104.4  143.6     105
17  2025-02-20  140.0  156.6  135.2  146.2      38
18  2025-02-21  157.0  225.2  138.8  218.0     179
19  2025-02-24  194.0  221.4  174.0  190.4     218
20  2025-02-25  161.4  208.2  161.4  181.8     161
21  2025-02-26  191.0  233.4  167.0  211.6     409
22  2025-02-27  215.0  223.0  168.0  201.8     384
23  2025-02-28  186.8  187.6  125.6  129.6     715
24  2025-03-03  130.0  157.0  109.8  118.0     670
25  2025-03-04   98.8  140.0   98.8  134.0     303
26  2025-03-05  143.0  152.8  114.0  141.0     557
27  2025-03-06  171.6  225.0  162.8  209.8     912
28  2025-03-07  205.2  223.0  173.0  187.6     808
29  2025-03-10  188.4  199.6  147.8  173.6     684
30  2025-03-11  154.0  195.2  154.0  193.6     851
31  2025-03-12  210.0  251.4  193.6  203.8    1178
32  2025-03-13  203.8  207.8  143.0  163.8    1974
33  2025-03-14  165.4  242.2  150.4  237.8    1650
34  2025-03-17  237.8  245.8  215.0  222.0     878
35  2025-03-18  243.0  274.4  222.4  240.0     874
36  2025-03-19  220.0  233.0  193.4  212.4    1758
37  2025-03-20  199.4  224.6  180.6  194.6    2136
38  2025-03-21  186.0  188.0  116.0  122.4    7569
39  2025-03-24  123.0  135.8   77.4  100.2   14752
40  2025-03-25   97.0  107.6   72.4   84.0   17206
41  2025-03-26   78.0  103.4   78.0   81.0   15476
42  2025-03-27   76.8  105.6   62.2   81.8   21673
43  2025-03-28   83.0   93.8   64.2   64.6   18342
”。
3、‘期权类型’通过解析‘期权合约代码’是否是含有字符‘C’来判定，如果有就是‘看涨期权’否则是‘看跌期权’。
4、‘行权价’，通过解析‘期权合约代码’获取。

五、上期所期权数据获取和存储
5.1、数据获取
上期所接口‘option_shfe_daily’，示例‘option_shfe_daily_one,option_shfe_daily_two=ak.option_shfe_daily(symbol="黄金期权",trade_date="20250302")’，该接口返回的是数据元组，包含两个数据框架。‘one‘数据框架返回字段为：“
合约代码 开盘价 最高价 最低价     收盘价    前结算价     结算价   涨跌1   涨跌2  成交量  持仓量  持仓量变化  成交额  德尔塔  行权量
“，返回数据：“
0  au2504C464                                  239.82  238.98  239.82  0.84  0.84    0    0     -2  0.0  1.0    2
1  au2504C472                                  231.82  230.98  231.82  0.84  0.84    0    0     -2  0.0  1.0    2
2  au2504C480                                  223.82  222.98  223.82  0.84  0.84    0    0      0  0.0  1.0    0
3  au2504C488                                  215.82  214.98  215.82  0.84  0.84    0    0     -1  0.0  1.0    1
4  au2504C496                                  207.82  206.98  207.82  0.84  0.84    0    0     -2  0.0  1.0    2
”。'two'这个数据框架的返回字段为：“ 合约系列     成交量    持仓量  持仓量变化        成交额   行权量     隐含波动率”，返回数据示例：“
0  au2504                          107456      0 -78437  17610.792  9388  0.129504
1  au2505                             716   1421    445    317.256     0  0.184134
2  au2506                           16678  48149   2525  13225.892     1  0.155153
3  au2508                            1531  16088    234   1701.730     0   0.15866
4  au2510                              96    995     19     83.578     0  0.162867
”。‘one’数据框架返回数据的字段和类型如下：“
名称	类型	描述
合约代码	object	
开盘价	float64	
最高价	float64	
最低价	float64	
收盘价	float64	
前结算价	float64	
结算价	float64	
涨跌1	float64	
涨跌2	float64	
成交量	float64	
持仓量	float64	
持仓量变化	float64	
成交额	float64	
德尔塔	float64	Delta
行权量	float64	
“。
接口的两个参数：
1、symbol，在配置文件config.json中，内容是：
    "shfe_symbol": {
        "AG": "黄金期权",
        "SC": "原油期权",
        "CU": "铜期权"
     }
2、trade_date，格式为YYYYMMDD，因为接口只提供单日数据查询，但在系统应用中首次建立数据是一个时间段，比如从2025年2月12日开始，至今日，需要处理。随后每日运行更新（暂时手动运行待系统稳定改为自动执行）。
5.2、数据存储
数据获取后存放在数据库vix.db的数据表‘op_shfe’中（首次运行需要创建这个数据表）。数据表的字段除了包含数据源返回数据框架的全部字段外，还需要新增“交易日期”、“期权类型”、“行权价”。返回数据“合约代码”清洗成“期权合约代码”存入数据库（保证跟系统中其他期权数据表一致）。“交易日期”就是接口参数trade_date，存入数据表中的格式是YYYY-MM-DD，这里要做转换。“期权类型”根据返回的数据中“合约代码”中第7位字符是否为字母‘C’，如果是C，期权类型就是‘看涨期权’，如果是P，期权类型就是‘看跌期权’，如果数据源返回的第7位不是字母C也不是P，返回错误说明“期权合约返回格式不正确”
。“行权价”字段通过解析数据表“期权合约代码”获得在数据表中的数据类型是REAL，解析第7位字母C或P后面的数字，如果数字后还有空格，就忽略这个空格，只将数字存入数据表即可。数据表的主键是“期权合约代码”和“交易日期”。

六、广州期货交易所（简称广期所，英文缩写gfex）数据获取和存储
6.1、数据获取
接口函数‘option_gfex_daily’，示例‘option_gfex_daily_df = ak.option_gfex_daily(symbol="碳酸锂", trade_date="20250422")
print(option_gfex_daily_df)’，返回数据如下：“
      商品名称             合约名称   开盘价   最高价  ...  持仓量变化       成交额  行权量      隐含波动率
0      碳酸锂  lc2505-C-100000  30.0  30.0  ...     69     0.885    0  56.948467
1      碳酸锂  lc2505-C-102000  10.0  10.0  ...    -72     0.072    0  60.239777
2      碳酸锂  lc2505-C-104000   0.0   0.0  ...      0     0.000    0  63.445512
3      碳酸锂  lc2505-C-106000  20.0  20.0  ...     20     0.040    0  66.570552
4      碳酸锂  lc2505-C-108000   0.0   0.0  ...      0     0.000    0  69.619276
..     ...              ...   ...   ...  ...    ...       ...  ...        ...
840    碳酸锂   lc2603-P-90000   0.0   0.0  ...      0     0.000    0  21.754872
841    碳酸锂   lc2603-P-91000   0.0   0.0  ...      0     0.000    0  21.792238
842    碳酸锂   lc2603-P-92000   0.0   0.0  ...      0     0.000    0  21.765853
843    碳酸锂   lc2603-P-93000   0.0   0.0  ...      0     0.000    0  21.764568
844  碳酸锂小计                    NaN   NaN  ...   6112  2662.128    0        NaN

[845 rows x 17 columns]
”。这个数据接口返回的数据字段和类型如下：“
名称	类型	描述
商品名称	object	
合约名称	object	
开盘价	float64	
最高价	float64	
最低价	float64	
收盘价	float64	
前结算价	float64	
结算价	float64	
涨跌	float64	
涨跌1	float64	
Delta	float64	
成交量	int64	
持仓量	int64	
持仓量变化	int64	
成交额	float64	
行权量	int64	
隐含波动率	float64
”。接口函数的参数symbol是中文‘碳酸锂’，日期参数trade_date的格式是YYYYMMDD，系统第一次运行，我们2025年1月2日开始获取数据。
6.2、数据储存
数据储存在数据库vix_data.db的数据表op_gfex（需新建）里。数据表的字段有：“期权合约代码、交易日期、开盘价、收盘价、最高价、最低价、成交量、行权价、涨跌、期权类型、结算价、前结算价、持仓量、持仓量变化、成交额、涨跌1”。
6.2.1、“交易日期”的数据来源是接口函数的trade_date参数，但需要清洗后存入，清洗规则是把参数的格式从YYYYMMDD变化成YYYY-MM-DD。
6.3、其他字段从接口函数返回的数据框中经过清洗和映射后存入数据表，规则如下：
6.3.1、数据框架中的“合约名称”的返回值是lc2507-C-67000，需要把‘-’清洗掉后映射到“期权合约代码”中；
6.3.2、数据表“期权类型、行权价”通过解析数据表“期权合约代码”获取。例如期权合约代码‘lc2507C67000’，左起第7个字符是‘C’，“期权类型”的值就应该是‘看涨期权’，如果是‘P’，就是‘看跌期权’；左起第8个字符至最后一个非空字符组成的数字是“行权价”，这里要把空格忽略掉（如有的话）一般行权价的字符是5个数字。
6.3.3、数据框架中“Delta、行权量、隐含波动率”不存储。

七、郑州商品交易所（简称郑商所，英文简称czce）期权数据获取和存储
7.1、数据获取
7.1.1、接口函数‘ak.option_czce_daily’，示例：df = ak.option_czce_daily(symbol="纯碱期权", trade_date="20250430")，返回数据框架示例：“
           合约代码    昨结算  今开盘  最高价  最低价  ...  增减量  成交额(万元)   DELTA  隐含波动率  行权量
0    SA506C1120  223.0  0.0  0.0  0.0  ...  0.0      0.0  0.9844  42.74  0.0
1    SA506C1140  203.0  0.0  0.0  0.0  ...  0.0      0.0  0.9784  40.82  0.0
2    SA506C1160  183.0  0.0  0.0  0.0  ...  0.0      0.0  0.9698  38.86  0.0
3    SA506C1180  163.5  0.0  0.0  0.0  ...  0.0      0.0  0.9576  36.87  0.0
4    SA506C1200  143.5  0.0  0.0  0.0  ...  0.0      0.0  0.9408  34.87  0.0
..          ...    ...  ...  ...  ...  ...  ...      ...     ...    ...  ...
303  SA601P1780  409.0  0.0  0.0  0.0  ...  0.0      0.0 -0.8759  26.52  0.0
304  SA601P1800  428.0  0.0  0.0  0.0  ...  0.0      0.0 -0.8838  26.84  0.0
305  SA601P1820  447.0  0.0  0.0  0.0  ...  0.0      0.0 -0.8914  27.17  0.0
306  SA601P1840  465.5  0.0  0.0  0.0  ...  0.0      0.0 -0.8987  27.50  0.0
307  SA601P1860  484.5  0.0  0.0  0.0  ...  0.0      0.0 -0.9058  27.84  0.0
”。单次返回指定日期的期权日数据。
7.1.2、参数说明
symbol是中文字符（纯碱期权、玻璃期权）从配置文件config.json（路径:~/vix/config.json）中获取，具体为
    "czce_fu_symbol": [
        "纯碱期权",
        "玻璃期权"
    ]
参数trade_date格式为YYYYMMDD，需要获取多个日期的数据，在终端中需要用户手动输入日期范围。
7.2、数据清洗和存储
7.2.1、数据储存在数据库vix_data.db（路径:~/vix/vix_data.db 已存在）的数据表op_czce（需新建）里。数据表的字段有：“期权合约代码、交易日期、开盘价、收盘价、最高价、最低价、成交量、行权价、涨跌、期权类型、结算价、前结算价、持仓量、增减量、成交额、涨跌2”。
7.2.2、数据清洗
接口返回数据框架中对应的字段和数据表op_czce的字段映射关系和清洗规则如下：
品种代码：期权合约代码 （清洗规则：返回数据SA506C1120清洗为SA2506C1120，需要把前三个字符‘%%5’或‘%%6’清洗为‘%%25’或‘%%26’）
交易日期 （接口函数的参数trade_date 把格式清洗为YYYY-MM-DD）
今开盘：开盘价
最高价
最低价
今收盘：收盘价
今结算：结算价
涨跌1：涨跌
成交量(手)：成交量
空盘量：持仓量
增减量
成交额(万元)：成交额
行权价 （通过解析“期权合约代码”，例如SA2506C1120中第8位字符至最后的字符是1120，这四个字符（如果有空格，需要忽略空格）组合成“行权价”
期权类型 （通过解析“期权合约代码”，例如SA2506C1120中第7个字符是字母‘C’，“期权类型”就是‘看涨期权’，如果是字母‘P’，就是‘看跌期权’）
主键是“期权合约代码”和“交易日期”。
昨结算：前结算价
涨跌2
DELTA （不存储）
隐含波动率 （不存储）
行权量 （不存储）

综上，不做映射的字段有：“最高价、最低价、涨跌2、增减量”，不做存储的字段有：“DELTA、隐含波动率、行权量”。数据框架中没有的需新增的字段有：“期权类型、行权价、交易日期”。


八、大连商品交易所（简称大商所，英文简称dce）期权数据获取和存储
8.1、option_dce_daily单次返回指定 symbol 和 trade_date 的期权行情数据。参数symbol从配置文件config.json（路径：~/vix/config.json)的"dce_symbol": [
         "黄大豆1号期权",
         "豆粕期权"
    ] 获得。
8.2、接口返回的是一个数据元组，有两个数据框架组成，其中df1的字段名称和格式如下：
商品名称	object	
合约名称	object	
开盘价	float64	
最高价	float64	
最低价	float64	
收盘价	float64	
前结算价	float64	
结算价	float64	
涨跌	float64	
涨跌1	float64	
成交量	float64	
持仓量	float64	
持仓量变化	float64	
成交额	float64	
行权量	float64

接口示例：‘ak.option_dce_daily(symbol="黄大豆2号期权", trade_date="20250514")’，返回的数据元组是：“
 商品名称          合约名称 开盘价 最高价 最低价    收盘价   前结算价    结算价   涨跌  涨跌1  Delta  隐含波动率(%) 成交量 持仓量 持仓量变化 成交额  行权量
0     豆二  b2506-C-2800   0   0   0    575    566    575  9.0  9.0   1.00     16.83   0   0     0   0    0
1     豆二  b2506-C-2900   0   0   0    475    466    475  9.0  9.0   1.00     16.83   0   0     0   0    0
2     豆二  b2506-C-2950   0   0   0    425    416    425  9.0  9.0   1.00     16.83   0   0     0   0    0
3     豆二  b2506-C-3000   0   0   0    375    366    375  9.0  9.0   1.00     16.83   0   0     0   0    0
4     豆二  b2506-C-3050   0   0   0    325    316    325  9.0  9.0   1.00     16.83   0   0     0   0    0
..   ...           ...  ..  ..  ..    ...    ...    ...  ...  ...    ...       ...  ..  ..   ...  ..  ...
365   豆二  b2604-P-3600   0   0   0    277    280    277 -3.0 -3.0  -0.53     17.46   0   0     0   0    0
366   豆二  b2604-P-3700   0   0   0    340    344    340 -4.0 -4.0  -0.60     17.46   0   0     0   0    0
367   豆二  b2604-P-3800   0   0   0  408.5    414  408.5 -5.5 -5.5  -0.66     17.46   0   0     0   0    0
368   豆二  b2604-P-3900   0   0   0    483    489    483 -6.0 -6.0  -0.72     17.46   0   0     0   0    0
369   豆二  b2604-P-4000   0   0   0  562.5  569.5  562.5 -7.0 -7.0  -0.77     17.46   0   0     0   0    0

[370 rows x 17 columns]
     合约系列  隐含波动率(%)
0   b2506     16.83
1   b2507     26.48
2   b2508     26.48
3   b2509     17.46
4   b2510     17.46
5   b2511     17.46
6   b2512     17.46
7   b2601     17.46
8   b2602     17.46
9   b2603     17.46
10  b2604     17.46
”，分成2部分，只保存第一部分，存储到数据表‘op_dce’中。
8.3、处理返回的数据框架并存入数据表，处理方法如下。
8.3.1、返回的第一部分数据框架中的“商品名称”列舍弃，不做保存。
8.3.2、数据框架中“合约名称”列映射为“期权合约代码”并清洗，清洗规则是去掉原数据中的‘-’，例如‘b2506-C-2800’处理后得到‘b2506C2800’。
8.3.3、数据表中新增“期权类型”列，解析“期权合约代码”列，如第6位字符是‘C’，则“期权类型”的值是‘看涨期权’，如果是‘P’，值为‘看跌期权’，如果既不是C也不是P，提示错误：‘没有找到字符C或者P，期权类型解析失败’。
8.3.4、数据表中新增“行权价”，解析“期权合约代码”列的第7位及以后的字符。例如‘b2506C2800’，第7位及以后的字符是‘2800’。
8.3.5、数据表中新增“交易日期”列，值来自接口函数的参数trade_date="YYYYMMDD"，把日期格式清洗为YYYY-MM-DD后存入。



